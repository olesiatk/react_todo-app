{"version":3,"sources":["components/TodoList.js","components/TodoApp.js","App.js","index.js"],"names":["TodoList","items","className","type","id","htmlFor","map","todo","key","title","TodoApp","useState","todos","setTodos","setTitle","countNotCompleted","setCountNotCompleted","onSubmit","event","preventDefault","trim","Date","completed","count","addTodo","placeholder","value","onChange","e","target","href","App","ReactDOM","render","document","getElementById"],"mappings":"mSAGaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BAASC,UAAU,QACjB,2BAAOC,KAAK,WAAWC,GAAG,aAAaF,UAAU,eACjD,2BAAOG,QAAQ,cAAf,wBACCJ,EACC,oCACE,wBAAIC,UAAU,aACXD,EAAMK,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKH,IACZ,yBAAKF,UAAU,QACb,2BAAOC,KAAK,WAAWD,UAAU,WACjC,+BAAQK,EAAKE,OACb,4BAAQN,KAAK,SAASD,UAAU,mBA2CxC,KCvDKQ,EAAU,WAAO,IAAD,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,OAEDF,mBAAS,IAFR,mBAEpBF,EAFoB,KAEbK,EAFa,OAGuBH,mBAAS,GAHhC,mBAGpBI,EAHoB,KAGDC,EAHC,KAkB3B,OACE,oCACE,4BAAQd,UAAU,UAChB,qCACA,0BACEe,SAAU,SAACC,GACTA,EAAMC,iBAnBA,WACd,GAAIV,EAAMW,OAAQ,CAChB,IAAMb,EAAO,CAAEH,IAAK,IAAIiB,KACtBZ,QACAa,WAAW,GAEbT,EAAS,GAAD,mBAAKD,GAAL,CAAYL,KACpBS,GAAqB,SAAAO,GAAK,OAAIA,EAAQ,KAGxCT,EAAS,IAUDU,KAGF,2BACErB,KAAK,OACLD,UAAU,WACVuB,YAAY,yBACZC,MAAOjB,EACPkB,SAAU,SAACC,GACTd,EAASc,EAAEC,OAAOH,YAM1B,kBAAC,EAAD,CAAUzB,MAAOW,IAEjB,4BAAQV,UAAU,UAChB,0BAAMA,UAAU,cACba,EACA,IAFH,cAMA,wBAAIb,UAAU,WACZ,4BACE,uBAAG4B,KAAK,KAAK5B,UAAU,YAAvB,QAGF,4BACE,uBAAG4B,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQ3B,KAAK,SAASD,UAAU,mBAAhC,sBCvDO6B,MARf,WACE,OACE,6BAAS7B,UAAU,WACjB,kBAAC,EAAD,QCGN8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f8d286d4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ items }) => (\n  <section className=\"main\">\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    {items ? (\n      <>\n        <ul className=\"todo-list\">\n          {items.map(todo => (\n            <li key={todo.id}>\n              <div className=\"view\">\n                <input type=\"checkbox\" className=\"toggle\" />\n                <label>{todo.title}</label>\n                <button type=\"button\" className=\"destroy\" />\n              </div>\n            </li>\n          ))}\n        </ul>\n        {/* <ul className=\"todo-list\">\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>asdfghj</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"completed\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>qwertyuio</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li className=\"editing\">\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>zxcvbnm</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n\n          <li>\n            <div className=\"view\">\n              <input type=\"checkbox\" className=\"toggle\" />\n              <label>1234567890</label>\n              <button type=\"button\" className=\"destroy\" />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n        </ul> */}\n      </>\n    ) : ''}\n\n  </section>\n);\n\nTodoList.propTypes = PropTypes.arrayOf(PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n})).isRequired;\n","import React, { useState } from 'react';\nimport { TodoList } from './TodoList';\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [title, setTitle] = useState('');\n  const [countNotCompleted, setCountNotCompleted] = useState(0);\n\n  const addTodo = () => {\n    if (title.trim()) {\n      const todo = { id: +new Date(),\n        title,\n        completed: false };\n\n      setTodos([...todos, todo]);\n      setCountNotCompleted(count => count + 1);\n    }\n\n    setTitle('');\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            addTodo();\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n          />\n        </form>\n      </header>\n\n      <TodoList items={todos} />\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {countNotCompleted}\n          {' '}\n          items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <TodoApp />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}